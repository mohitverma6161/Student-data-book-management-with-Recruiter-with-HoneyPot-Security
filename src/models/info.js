const mongoose=require('mongoose')
const validator=require('validator')

const infoSchema=new mongoose.Schema({
    first_name:{
        type:String,
        required:true,
        trim:true
    },
    last_name:{
        type:String,
        required:true,
        trim:true
    },
    email:{
        type:String,
        required:true,
        lowercase:true,
        trim:true,
        // validate(value){
        //     if(!validator.isEmail(value)){
        //         throw new Error('Email is inavlid')
        //     }
        // }
    },
    phone:{
        type:Number,
        required:true,
        trim:true
    },
    father:{
        type:String,
        required:true,
        trim:true
    },
    mother:{
        type:String,
        required:true,
        trim:true
    },
    dob:{
        type:String,
        required:true,
        trim:true
    },
    gender:{
        type:String,
        required:true,
        trim:true
    },
    nationality:{
        type:String,
        required:true,
        trim:true
    },
    caste:{
        type:String,
        required:true,
        trim:true
    },
    address:{
        type:String,
        required:true,
        trim:true
    },
    city:{
        type:String,
        required:true,
        trim:true
    },
    state:{
        type:String,
        required:true,
        trim:true
    },
    pincode:{
        type:Number,
        required:true,
        trim:true
    },
    degree:{
        type:String,
        required:true,
        trim:true
    },
    branch:{
        type:String,
        required:true,
        trim:true
    },
    college:{
        type:String,
        required:true,
        trim:true
    },
    starting_year:{
        type:Number,
        required:true,
        trim:true
    },
    ending_year:{
        type:Number,
        required:true,
        trim:true
    },
    cgpa:{
        type:String,
        required:true,
        trim:true
    },
    school:{
        type:String,
        required:true,
        trim:true
    },
    board:{
        type:String,
        required:true,
        trim:true
    },
    starting_year_xii:{
        type:Number,
        required:true,
        trim:true
    },
    ending_year_xii:{
        type:Number,
        required:true,
        trim:true
    },
    cgpa_xii:{
        type:String,
        required:true,
        trim:true
    },
    school_x:{
        type:String,
        required:true,
        trim:true
    },
    board_x:{
        type:String,
        required:true,
        trim:true
    },
    starting_year_x:{
        type:Number,
        required:true,
        trim:true
    },
    ending_year_x:{
        type:Number,
        required:true,
        trim:true
    },
    semester_1:{
        type:String,
        trim:true
    },
    semester_2:{
        type:String,
        trim:true
    },
    semester_3:{
        type:String,
        trim:true
    },
    semester_4:{
        type:String,
        trim:true
    },
    semester_5:{
        type:String,
        trim:true
    },
    semester_6:{
        type:String,
        trim:true
    },
    semester_7:{
        type:String,
        trim:true
    },
    semester_8:{
        type:String,
        trim:true
    },
    cgpa_x:{
        type:String,
        required:true,
        trim:true
    },
    father_name:{
        type:String,
        required:true,
        trim:true
    },
    father_email:{
        type:String,
        required:true,
        trim:true
    },
    father_contact:{
        type:Number,
        required:true,
        trim:true
    },
    father_occupation:{
        type:String,
        required:true,
        trim:true
    },
    mother_name:{
        type:String,
        required:true,
        trim:true
    },
    mother_email:{
        type:String,
        required:true,
        trim:true
    },
    mother_contact:{
        type:Number,
        required:true,
        trim:true
    },
    mother_occupation:{
        type:String,
        required:true,
        trim:true
    },
    skills:{
        type:String,
        required:true,
        trim:true
    },
    coding_language:{
        type:String,
        trim:true
    },
    machine_learning:{
        type:String,
        trim:true
    },
    cyber:{
        type:String,
        trim:true
    },
    web_development:{
        type:String,
        trim:true
    },
    testing:{
        type:String,
        trim:true
    },

    Extracurricular:{
        type:String,
        trim:true
    },
    hackathons:{
        type:String,
        trim:true
    },
    cultural:{
        type:String,
        trim:true
    },
    research:{
        type:String,
        trim:true
    },
    coding_events:{
        type:String,
        trim:true
    },
    Accomplishments:{
        type:String,
        trim:true
    },
    LinkedIn:{
        type:String,
        required:true,
        trim:true
    },
    Gmail:{
        type:String,
        required:true,
        trim:true
    },
    Github:{
        type:String,
        required:true,
        trim:true
    },
    mnc:{
        type:String,
        trim:true
    },
    start_up:{
        type:String,
        trim:true
    },
    job_description:{
        type:String,
        trim:true
    },
    salary:{
        type:String,
        trim:true
    },
    work_experience:{
        type:String,
        trim:true
    },
    owner:{
        type:mongoose.Schema.Types.ObjectId,
        required:true,
        ref:'User'
    }
},{
    timestamps:true
})
const Info=mongoose.model('Info',infoSchema)

module.exports=Info
